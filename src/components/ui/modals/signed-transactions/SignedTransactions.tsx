import React, { FunctionComponent, useState } from "react";
import { FaChevronDown, FaChevronUp } from "react-icons/fa";
import classNames from "classnames";
import moment from "moment";
import { useModal } from "@/hooks/context";
import { Block } from "@/types";
import CloseIcon from "../../icons/Close";

type Props = {
  signedTransactions: Block[];
};

export const SignedTransactionsModal: FunctionComponent<Props> = ({ signedTransactions }) => {
  const { closeModal } = useModal();
  const [openBlockId, setOpenBlockId] = useState<number | null>(null);

  const toggleBlock = (id: number) => {
    setOpenBlockId((prevId) => (prevId === id ? null : id));
  };

  return (
    <div className="max-h-[calc(100vh_-_120px)] max-w-[600px] overflow-y-scroll scrollbar-hide">
      <div className="mb-4 flex justify-between">
        <h2 className="text-2xl font-semibold">–ë–ª–æ–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ</h2>
        <button onClick={closeModal} className="">
          <CloseIcon className="h-5 w-5 fill-black/50 hover:fill-black/100" />
        </button>
      </div>
      <p className="mb-4">
        üìù –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –Ω–æ –æ–Ω–∏ –æ–∂–∏–¥–∞—é—Ç –º–∞–π–Ω–µ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ –≤
        –±–ª–æ–∫—á–µ–π–Ω–µ. –ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å –∏ –≥–æ—Ç–æ–≤—ã –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤
        –±–ª–æ–∫—á–µ–π–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∞–π–Ω–∏–Ω–≥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è
        –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–ª–æ–∫—á–µ–π–Ω–∞. ‚è≥‚ú®
      </p>
      {signedTransactions.map((block) => (
        <div
          key={block.id}
          className={classNames(
            "border p-4 transition-all",
            openBlockId === block.id ? "animate-accordion-open" : "animate-accordion-close",
          )}
        >
          <div
            className="flex cursor-pointer items-center justify-between"
            onClick={() => toggleBlock(block.id)}
          >
            <h2 className="text-lg font-semibold">
              Block #{block.id} - {moment(block.created_date).format("DD-MM-YYYY h:mm:ss")}
            </h2>
            <div className="p-2">
              {openBlockId === block.id ? <FaChevronUp /> : <FaChevronDown />}
            </div>
          </div>
          {openBlockId === block.id && (
            <div className="mt-4">
              <p>–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ö—ç—à: {block.prevHash}</p>
              <div className="my-4 max-w-md self-start truncate text-gray-600">
                <p className="truncate">–ê–¥—Ä–µ—Å–∞—Ç: {JSON.parse(block.data).receivedAddress}</p>
                <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {JSON.parse(block.data).amount}</p>
                <p className="truncate">–°–æ–æ–±—â–µ–Ω–∏–µ: {JSON.parse(block.data).message}</p>
              </div>
              <p>–•—ç—à: {block.hash}</p>
            </div>
          )}
        </div>
      ))}
    </div>
  );
};
